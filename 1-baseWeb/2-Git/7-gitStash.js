/*
=============================================================================================================================================

git stash :      بعضی مواقع هستش ما داخل یک فیچر یا برنچی داریم کار میکنیم یک کار اورژانسی پیش میاد و ما باید به یک برنچ دیگه بریم و ما نمیتوانیم نیمه کاره اون رو رها کنیم و به
یک جا نیاز داریم تا بیایم و اون رو موقتا ذخیره کنیم تا وقتی کارمون تموم شد بیایم و اون کارو انجام بدهیم چون اگر همین کارو نکنیم   و    سوییچ کنیم تمام تغیراتمون وارد  اون شاخه امون
می شود گرچه توصیه می شود قبل از این که ما بیایم و از یک شاخه به شاخه ای دیگه برویم اول کامیت کنیم حالا ما شرایطی داریم که پروژه به جایی نرسید ه که بخایم و کامیت کنیم در اینجا
برنامه ولی این کار رو هم نمیخاهیم انجام stage فایل هامونو می بریم داخل git add استفاده بکنیم برای همین در داخل پروژه در ابتدا میایم و با دستور stash توصیه می شود که بیایم و از
استفاده بکنیم با استفاده از این دستور تغیرات امون رو وارد این حافظه موقت میکنیم git stash  ها میایم و استفاده میکنیم برای این کار کافی است که از دستور stash بدهیم برای همین از
                                                                                                  همچنین اگر خواستیم در هنگام ذخیره تغیرات یک نام دلخواه نیز برای آن ها تعریف کنیم از دستور زیر استفاده میکنیم 

git    stash   save     " message  "         //       git    stash    list          هامون رو ببینیم stash  با استفاده از این دستور هم میتونیم بیایم و لیست همه ی 

git stash  id-stash      //      git stash show  nameStash : stash@{2 }         امون هم میتونیم بیایم و از دستور زیر استفاهد بکنیم stash برای مشاهده 

حالا برای برگردوند تغیرات امون به داخل برنامه امون و ادامه ی مراحل کد نویسی امون میتونیم از دو تا راه حل استفاده بکنیم

git stash  apply   id-stash      هامون هنوز هستش و اضافه میکنه stash تو لیست 

git stash pop    id-stash       هامون میاد و پاک میکنه stash  اضافه میکنه ولی از تو لیست 

میاد و وارد این حافظه موقت میشه اگر ما بخایم که بیایم و جلوی این کار رو بگیریم برای مثال modifed باشه و چه در مرحله stage با استفاده از این دستور ما تمام تغیرات امون که چه در مرحله

git    stash   save    --no-keep-index     " message  "                                   هستند نروند میتونیم بیایم و از سوییچ های زیر استفاده بکنیم stage بیایم و بگیم که تغیراتی که در مرحله 

git    stash   -u    //    git    stash   --include-untracked                      امون  stash هستند میان و اضافه می شوند به مرحله untrack با استفاده از این دستور تمام فایل هایی که حتی 

git    stash   --all                                                                                                                                                      و اگر خواستیم که بیاد و همه رو اضافه کنه کافیه بیایم و از دستور 

git   stash  branch  <branch name>  <stash id >                                                            وارد یک شاخه دیگه بکنیم هم میتونیم از دستور زیر استفاده بکنیم stash اگر ما خواستیم که 

=============================================================================================================================================
*/
