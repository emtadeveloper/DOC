/*
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

هستند که به صورت شناسه یکتا هستند Primitve ها نوعی از داده های  Symbol 

let mySymbol = Symbol('foo')          console.log(Symbol() === Symbol( ))           //false 

چند تا نکته پیرامون سیمبل ها 

1-  میگویند که استفاده از اون ها الزامی نیست ولی بهتره که استفاده بکنیم description به چیزی که به عنوان ورودی به تابع سیمبل داده می شود اصطلاحا
 
3- با توجه به این که هر سیمبل دارای آیدی یکتا است پس هیچ دو سیمبلی با هم برابر نیستند و حتی اگر دیسکرریپشن آن ها برابر باشد

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Symbols انواع ها 

1- User-defined symbols :  تعریف معمولی که به شیوه هایی که در بالا اومدیم و ازشون استفاده کردیم میتونیم از آن ها استفاده بکنیم

let mySymbol1 = Symbol('foo')       let mySymbol2 = Symbol()     

2- Globally registered symbols :  اون هارو میایم و تعریف اشون میکنیم و میتونیم اون هارو در جاهای دیگه بیایم و صدا بزنیم و استفاده بکنیم symbol.for با استفاده از تابع

let citizenID = Symbol.for('snn')    console.log(ssn === citizenID)    // true دادیم و هم مقداری که به عنوان متغیر دادیم description در اینجا هم از مقداری که به 
رو اومدیم و استفاده کردیم

let citizenID = Symbol.for('snn')   console.log(Symbol.keyFor(citizenID))   // 'snn'  دسترسی پیدا بکنیم description میتونیم بیایم و به مقدار  keyFor  نکته : با استفاده از تابع


3- well-known symbols سیمبل های از پیش تعریف شده در جاوااسکریپت هستند

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

در نامگزاری آبجکت هامون هستش که یک سری ویژگی رو باعث میشه در برنامه ما به وجود بیاد Computed Property  استفاده از اون ها به عنوان   symbol  نکته : یکی از کاربرد های مهم 

let age = Symbol();   let obj = {   name: "vahid",      [age]: 90,  };   console.log(obj);

حال که ما اومدیم و همچین کاری رو کردیم یکسری اتفاق برامون میوفته 

1-تعریف شدند رو به ما نشون نمیدهد  Symbol  هنگامی که میایم و برای صدا کردن کلید های آبجکت امون از توابع زیر استفاده میکنیم اون کلید هایی که

- Object.getOwnPropertyNames(obj)  // name                  -Object.keys(obj)    // name 

هامون رو نشون میده و نه بقیه کلید هامون رو Symbol هامون رو مشاهده بکنیم باید بیایم و از تابع زیر استفاده بکنیم  که این متد فقط میاد و Symbol  خوب اگر ما خواستیم که بیایم و 

Object.getOwnPropertySymbols(obj)  

2-  تعریف شده اند دیده نمی شوند Symbol شمارش یا پیمایشی بکنیم کلید هایی که به صورت for ... of  و یا for .. in اگر نیاز بود که بیایم و روی کلید های آبجکت هامون با استفاده از حلقه های 

3-  استفاده بکنیم getOwnPropertySymbols  تعریف شده اند میتونیم از تابع Symbol برای دیدن مقادیر و که به صورت 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
