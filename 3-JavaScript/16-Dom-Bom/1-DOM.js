/*
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DOM :   یک ابجکت از تمام المنت های صفحه امون بهمون تحویل می دهد انگار  صفحه مارو  میاد و  تبدیل  میکنه به یکسری نود و بین     Document Object Model
نود ها یک  ارتباط پدر و فرزندی برقرار میکنه همچنین یک مفهوم هستش که صرفا مختص به جاوا اسکریپت نیست و میتونیم اون رو  هرجایی که خواستیم پیاده سازی کنیم

Api cross-platform : هیچ گونه وابستگی به سخت افزار یا نرم افزار و یا زبان برنامه نویسی ندارد و در همه زبان های برنامه نویسی همچین چیزی هستش

interface : رابط بین دو تا مفهوم هستش

یکسری وظایف داره که به شرح زیر هستند DOM

1-  به ازای تمام المنت ها و محتوای داخل صفحه وب امون یک شی یا آبجکت رو درست میکنه

2-  یک سری متد یا رویداد برای دسترسی به المنت های صفحه امون ایجاد میکنه 

3 - HTML , Body , head یکسری آبجکت اصلی داره که 3 تا هستند  DOM 

که میاد و به ما یکسی آی پی میده تا بتونیم با استفاده از اون نودهای صفحه امون Document  باید بیایم و از یک آبجکت استفاده بکنیم به نام   DOM  نکته : برای دسترسی به 
رو آپدیت و به روز نگه اشون داریم

Real DOM : یک تگ ما یا المنت امون میاد و تغیر میکنه کل صفحه و المنت هامون میاد و تغیر ایجاد میکنن و این باعث میشه که اگر تعداد رندر های ما بالا بره سرعت لود و
اجرای صفحه بیاد و پایین قرار بگیره که برای رفع این موضوع از ری اکت استفاده میکنیم و راهکار اون

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

نکته : متده هایی که اسمشون جمع هست  آرایه بر می گردونند و اون هایی که نیست یک شی برمیگردونند

روش های انتخاب نود ها
 
1- getElement استفاده از دستورات    document.getElementsByTagName( );  //    document.getElementsByClassName( );  //  document.getElementById( );
           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2- querySelector استفاده از دستورات    document.querySelector ( nameClass )    //     document.querySelectorAll ( nameClass )
       
<ul>
  <li> The <li>
  <li> test </li>
</ul>
<ul>
  <li> The <li>
  <li> test </li>
</ul>

<script>

  let elements = document.querySelectorAll( ' ul > li : last-child ' );
  for( let elem of elements ) {   alert ( elemt.innerHTML );  // "test" , "passed"   }

<script>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

اون جوابی که به ما بر می گردونه به صورت لایو هستش  getElement هستش در این هستش که   querySelector و  getElement  نکته : یکی از تفاوت هایی که بین استفاده از 

<div> Frist div </div>

<script> 

let divs = document.getElementsByTagName("div")
alert(div.length)  // 1

<script>

<div> Second div </div>

<script> 

let divs = document.getElementsByTagName("div")
alert(div.length)  // 2

<script>

///////////////////////////////////////////////////////////

<div> Frist div </div>

<script> 

let divs = document.querySelectorAll("div")
alert(div.length)  // 1

<script>

<div> Second div </div>

<script> 

let divs = document.querySelectorAll("div")
alert(div.length)  // 1

<script>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 */
