/*
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Asynchronous = 1   & Synchronous = 2


یعنی کد های ما بیان و به صورت پشت سر هم sync به معنی هم زمان هستش خوب در داخل روش برنامه نویسی  Synchronous  ناهم زمان و دومی هم  Asynchronous  ما به طور کلی دو نوع روش برنامه نویسی داریم 
که به آن برنامه نویسی ناهمزمان یا نامتقارن میگویند یک مدل یا مفهوم هستش Async  اجرا شوند  تا یک دستور تمام نشده است به دنبال دستور بعدی نرود به این شویه برنامه نویسی همزمان هم میگویند ولی در روش دوم یا 
هستش CPU که کد ها پشت سر هم اجرا نمی شوند و به اصطلاح ترتیب کدها غیرخطی هستش که این روش برای بهتر مدیریت کردن


callBack Function : معنی لغوی یعنی فراخوانی مجدد حالا اگر ما بیایم و یک تابع رو در نظر بگیرم که به عنوان آرگومنت ورودی یک تابع بیاد و بگیره به طوری که اجرای تابع مذکور وابسته به اتمام اجرای تابع دیگری باشد اون تابع که
callBack Function و به اون تابع که آرگومنت اش هست میگیم  Higher order function   میاد و یک تابع دیگه رو به عنوان آرگومنت میگیرد رو بهش میگیم


چرا از کال بک فانکشن ها استفاده میکنیم ؟      ممکن است اجرای برخی از توابع زمان بر بوده و به اون صورت که فراخانی شده اند اجرا نشوند بنابراین با به کارگیری کال بک سیستم را ملزم ربه رعایت این مسئله خواهیم کرد تازمانی که اجرای
تابع مورد نظر  تمام نشده است مفسر جی اس منتظر بماند تا اجرای تابع مدنظر به اتمام برسد و در ادامه کال بک را ملزم به اتمام اجرای  تابع مدنظر میکنیم و این درحالی است که سیستم در صورت مشاهده  زمان بر بودن تابع مذکور به سراغ
اجرای تسک های دیگر  غیر از تابع کال بک می رود و اجرای آن را به زمانی که تابع زمان بر تمام شد نگه میدارد


callBack hell مباحث پیشرفته تر مثل جهنم کال بک ها و خطایابی در کال بک ها بعدا خوانده شود
 

binding :  کلمه به آبجکت گلوبال امون میاد و اشاره میکند و برای این مشکل باید از روش های بایندینگ استفاده بکنیم this در داخل کال بک فانکشن ها 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

question : سوالات زیر رو خروجی شون رو بهم نشون بده

const printName = () => {
    setTimeout(() => {
        console.log("Emad");
        setTimeout(() => {
            console.log("Ali");
            setTimeout(() => {
                console.log("Reza");
            }, 100);
        }, 500);
    }, 1000);
};
printName();   //  Emad  ,  Ali  ,  Reza 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

question : سوالات زیر رو خروجی شون رو بهم نشون بده

function dely_print(callBack) {
    setTimeout(() => {
        callBack;
    }, 1000);
}

function print_1(callBack) {
    console.log("print_1");
    setTimeout(() => {
        callBack;
    }, 2000);
}

function print_2(callBack) {
    setTimeout(() => {
        console.log("print_2");
        setTimeout(() => {
            callBack();
        }, 1000);
    }, 3000);
}

function print_3() {
    console.log("print_3");
}

dely_print(print_1(print_2(print_3)));

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
