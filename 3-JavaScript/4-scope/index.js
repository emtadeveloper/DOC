/*
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

scope : به اون محدوده یا قلمرو قابل دسترسی به یک تابع یا متغیر رو اسکوپ میگویند 

     - local Scope  :  function scope  

     - global scope 

     - block scope  :  Block scope 

1-functional Scope(var) :  سطح دسترسی که در داخل یک تابع محدود باشد و متغیر ما درداخل محدوده یک تابع قابل دسترسی باشد  

2-Blocked Scope(let const) :  محدوده تغیراتی که در داخل تو عدد براکت باز بسته محدود شده باشد 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

window / var نکته :  متغیر های گلوبال در جاوااسکریپت که با کلمه کلیدی ور  تعریف  می شوند  میان و در داخل آبجکت ویندو در صفحه مرورگر ما قرار میگرند
 
شود متغیر های محلی یا همان لوکال زمانی که اجرای تابع تمام شود حذف می شوند در مرورگر های declare نکته : طول عمر یک متغیر زمانی شروع می شود که   
وب متغیر های سراسری زمانی حذف می شوند که شما مرورگر یا تب مربوطه را ببندید اما برای صفحات جدیدی که در همان پنجره باز شوند قابل دسترس خواهند 
بود

نکته : در اسکوپ ها ما موقعی با خطای ان ان دیفاین  رو به رو می شویم  زمانی که قبل از تعریف و مقداردهیش  فراخانی شود و در مواقعی که او را ن تعریف و ن
مقدار دهی کردیم با خطای رفرنس اررور مواجه می شویم

آشنایی با دو تا خطای معروف پیرامون متغیر ها 

N  N  define  :     زمانی که قبل از تعریف و مقدار دهیش میایم و فراخانی اشت میکنیم
 
Refrence Error  :   زمانی که نه تعریف اش کنیم و نه مقدار دهیش

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

function hi (){
    console.log("1")
}
hi()
function hi (){
    console.log("2")
}
hi()
function hi (){
    console.log("3")
}
hi()

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 */
