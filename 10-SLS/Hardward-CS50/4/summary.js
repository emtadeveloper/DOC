/*
--------------------------------------------------------------------------------------------------------------------------------------------

Hex :  00 = 0  ,  FF = 255 ;    روش نامگزاری رنگ ها به صورت هگزا دسیمال

   اعداد به مبنای ۱۶

بیت ذخیره می شود ۴ 

#A1FFCD =  3 byte

CD  10 * 12 +  1 * 13 = 120 + 13 = 133



0 1 2 3 4 5 6 7 8 9 A B C D E F   که اعداد بین ۱ تا ۱۵ به ترتیب داخل خودش شامل می شود

16 ^ 1     16 ^ 0
   #          # 


شیوه شمارش به این صورت هستش که به صورت دو رقم دو رقم میایم و تغیرات رو اعمال میکنیم

01   02   03  04  05  06   07  08   09   0A    0B  0C  0D    0E    0F
11   12   13  14  15  16   17  18   19   1A    1B  1C  1D    1E    1F

FF بزرک ترین عدد در داخل آن 

16   1
F    F
16 * F   +  F * 1   =  16  * 15  +  15  = 255

--------------------------------------------------------------------------------------------------------------------------------------------

میاد و به آدرس ما در داخل حافظه امون اشاره میکنه &n 

int n = 50;
int *p = &n;

برای مثال ما با استفاده از دستور زیر میتونیم بیایم و به آدرس حافطه متغیری که ذحیره کردیم دسترسی داشته باشیم

#include <stdio.h>

int main(void)
{
    int n = 50;
    int *p = &n;
    printf("%p\n", p);
}


-------------------------------------

#include <stdio.h>

int main(void)
{
    // int n = 50;
    // int *p = &n;
    char *s = "HI!";
    char *p = &s[0];
    printf("%p\n",p);
    printf("%p\n",s);
}

خوب طبق مثال زیر اگر بیایم و نگاه کنیم میتونیم ببینیم که هر خونه حافظه مقادیر یک رشته رو بشت سر هم میاد و ذخیره میکنه


#include <stdio.h>

int main(void)
{
    char *s = "HI!";
    printf("%c\n",*s);
    printf("%c\n",*s(s+1));
    printf("%c\n",*s(s+2));
}

خوب ما با استفاده از حالت بالا میتونیم با استفاده از خونه های حافظه بیایم و به مقادیر دسترسی داشته باشیم

#include <stdio.h>

int main(void)
{

    int numbers[] = {4,6,8,2,7,5,0}

    printf("%i\n", *number);
    printf("%i\n", *number(numbers + 1));
    printf("%i\n", *number(numbers + 2));
    printf("%i\n", *number(numbers + 3));
    printf("%i\n", *number(numbers + 4));
    printf("%i\n", *number(numbers + 5));
    printf("%i\n", *number(numbers + 6));

}

در داخل سی دو تا رشته هیچ وقت باهم دیگه برابر نیستند دلیل اصلی اون هم این هستش که هر رشته به یک آدرس در حافطه
میاد و اشاره میکنه

برای چک کردن برابری بهتر هستش که بیایم و به صورت زیر عمل بکنیم

#include <cs50.h>
#include <stdio.h>
#include <string.h>

int main(void)
{
    char *s = get_string("s : ");
    char *t = get_string("t : ");

    if (strcmp(s, t) == 0)
    {
        printf("Same\n");
    }
    else
    {
        printf("Different\n");
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------
*/