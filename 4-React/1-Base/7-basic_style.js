/*
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

امون رو مینوشتیم و بعد در داخل کامپوننت امون به شیوه زیر css به پروژه امون این بودش که میومدیم و فایل ها و کدهای  css ساده ترین راه برای اضافه کردن 
import    "app.css"   میومدیم و اضافه اش میکردیم و ازش استفاده میکردیم

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

در داخل پروژه هامون فقط کافی هستش که بیایم و پکیج های اون رو نصب کنیم و بعد از اون ها با تغیر دادن پسوند فایل به شیوه ی بالایی  sass  برای  استفاده از
npm install node-sass     //    npm install   sass      بیایم و از اون استفاده بکنیم

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

css module  :   از مزیت هایی که برای برنامه ما داره اینه که میتونیم بیایم و از متغیر های جاوا اسکریپتی در اون استفاده کنیم و شیوه استفاده از اون نسبت به بالایی
برای مشاهده کد های برنامه امون میکنیم میبینیم که کدهای  inspect   کاملا فرق داره این مزیت تبدیل نام استایل هامون به متغیر ها باعث میشه که وقتی میایم و از 
شده که باعث میشه در داخل پروژه هرچه قدر کامپوننت مختلف داشته باشیم دیگه کلاس های تکراری نخواهیم داشت و باعث  نشه hash ما اومده و تبدیل به یکسری 
نشه override  که استایل هامون

معرفی سایت   style.module.css 

.head h1 {   font-size: 10rem;     color: red;  }

app.js      import style from "./style.module.css";

<div className={style.head}>

وقتی تو کدهامون داریم میایم و مپ میزنیم و یا یک پیمایشی رو انجام میدهیم بهتر هستش که بیایم و استایل هامون رو به صورت زیر اعمال بکنیم

arr.map((item)=>{ return ( <div className={ styles[ item.name ]}></div>)})

حالا اگر مجبور شدیم که بیایم و دو تا استایل رو بدیم میتونیم بیایم و از کد زیر استفاده بکنیم

arr.map((item)=>{ return ( <div className={`  ${ styles.eachSkill }  ${ styles[` skill $ { index }`]}  `]}></div>)})

sass module :  این مدل هم دقیقا شبیه به بالایی هستش و فقط کافی هستش که بیایم و نوع فایل هامون رو تغیر بدیم 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

css in js :    بیایم و استایل هامون رو به کدهامون اعمال بکنیم که برای نمونه کد های زیر رو  jsx و یا  style  هایی مثل  props  در اصلش اینه که بیایم و با استفاده از 
هم میان و در میان برای استفاده بهتر hash مربوط به خودشون در دسترس هستند و به صورت  scope  میتونیم ببینیم و خوبی که داره مثل بالای استایل های ما فقط در 
از اون ها هم دو تا کتابخونه معروف هستش که میایم وهرکدوم از اون هارو معرفی میکنیم همچنین قابلیت خوب بعدی که ما میدهند این هستش که تا زمانی که کامپونت
مدنظر ما نیاد و رندر نشه استایل هاشم پینت نمیشه رو مرورگر و این باعث میشه پرفورمنس سایت ما خیلی بهتر بشه

<p style={{fontSize : "10px" }}> This is Book </p>  به صفحه امون اضافه می شوندi nline  تو این حالت کدهای ما میان و به صورت 

<div>   <h1>Emad</h1>   <style  jsx>{ `     h1 {  color: blue;       }       ` }</style>   </div>  در این حالت میاد و به صورت کلاس و با یک نام که به صورت 
رندوم هستش به ما استایل دهی میکنه
           
کامپوننت های معروف برای این که بتونیم از این قابلیت ها خیلی بهینه تر هستش         
                    
style component        //   Emotion         کتابخونه زیاده ولی همین ها خوبه

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
