/*
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
===================================================================================================================================
 
که با استفاده از اون میتونیم بیایم و تست هامون رو دسته بندی بکنیم برای مثال کدهای قبلی رو میتونیم به شکل زیر درشون بیاریم describe  ما یک متد یا تابعی هم داریم به نام 

===================================================================================================================================

Props : استفاده از پراپس ها در تست نویسی

// Greeting.jsx

const Greeting = ({ name }) => <div>  <p> {name ? ` Hello ${name}  ` : " Hello " } </p>  </div>;

export default Greeting;

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

describe( " display greeting message " ) , () => {

    test ( "without name " , ()=> {
        act ( () => { render( < Greeting / > ,  container );     });
        expect(container.textContent).toBe("Hello");
    })

    test ( " with name" , () => {
        act ( () => { render( < Greeting name=" ali " / > ,  container );     });
        expect(container.textContent).toBe("Hello ali");
    })

}

textContent مقداری که به ما بر میگردونه یک رشته هستش

===================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
