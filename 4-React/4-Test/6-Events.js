/*
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
===================================================================================================================================
 
استفاده میکنیم یک تست بنویسیم هدف تست نویسی این هستش که کاربر نهایی چه چیزی رو میادstate خوب ما میخایم بیایم و برای یک کامپوننت امون که داریم از اون از هوک های 
و مشاهده میکنه و این جور مواقع باید اون مشاهده کاربر ببینیم برای مثال وقتی کاربر روی یک دکمه کلیک کرد بیاد و اون مقدار 1 رو ببینه

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Counter.jsx

export const Counter = () => {
    
    const [count, setCount] = useState(0);

    return (
        <div>
            <p>{count}</p>
            <button onClick={() => setCount(count + 1)}>increment</button>
        </div>
    );
};

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Counter.test.jsx

let container = null;

beforeEach(() => {
    const container = document.createElement("div");
    document.body.appendChild(container);
});

afterEach(() => {
    unmountComponentAtNode(container);
    container.remove();
    container = null;
});

describe("counter", () => {

    it("init counter should be zero", () => {

        act(() => {
            render( < Counter / > , container);
        });

        const countElm = container.querySelector("p");
        expect(countElm.textCountent).toBe("0");

    });

    it("count shold be zero  after click", () => {

        act(() => {
            render( < Counter / > , container);
        });

        const countElm = container.querySelector("p");
        const button = container.querySelector("button");

        act(() => {
            button.dispatchEvent(new MouseEvent("click", { bubbles: true }));
        });
        
        expect(countElm.textCountent).toBe("1");
    });
});

===================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
