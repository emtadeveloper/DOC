/*
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

linear-gradient  و radial-gradient  برای دادن گرادینت به عنصرمون هستش که به دو صورت خطی و دایره ای میتونیم ازش استفاده بکنیم
                    
filter: یک روش پردازش رندر کردن عنصر قبل از اینکه در صفحه نمایش داده شود می باشند که شبیه به ابزار فتوشاپ هستش

1- blur ( px,rem ) : از این تابع برای مات یا محو کردن عناصر استفاده می شود. مقداری که این تابع می گیرد یک مقدار مثبت است
                                     و هر چه این مقدار بیشتر باشد عنصر مات تر می شود و مقدار صفر هیچ تاثیری روی عنصر نخواهد گذاشت
                                     
2- brightness( % , 0.1 ) : 100% این تابع روشنایی عنصر یا تصویر را مشخص می کند. امکان تغییر از روشنایی صفر (سیاه) تا روشنایی
100%  رنگ اصلی خود عنصروجود دارد. همینطور به جای استفاده از درصد می توانید از اعداد بین صفر تا یک استفاده کنید اعداد بزرگتر از
باعث روشن تر شدن عنصر یا تصویر می شوند

3- contrast : کار این تابع تنظیم کردن تضاد در تصویر است به این معنی که تفاوت بین روشن ترین و تاریک ترین قسمت های تصویر را تنظیم
 می کند نحوه مقدار دهی این تابع کاملا مشابه به بالایی مقدار دهی می شود

4- grayscale : این نوع فیلتر رنگ تصویر را از بین می برد و آن را به یک تصویر خاکستری و بی رنگ تبدیل می کند. این تابع مقادیری بین 0 تا 100
درصد و یا 0 تا 1 را می پذیرد. عدد صفر تصویر را بدون تغییر حفظ می کند و عدد صد عکس را به بی رنگ ترین حالت تبدیل می کند اعداد بزرگتر از 
صد در صد به همان صد درصد تبدیل می شوند

6- saturation از این تابع زمانی استفاده می شود که بخواهیم به تصویر مورد نظر از نظر رنگی جان ببخشیم, این تابع تصویر را زنده تر و خوش رنگ تر
می کند. این تابع هم عددهایی بین 0 تا 100 درصد و یا 0 و 1 را میپذیرد و اعداد بیشتر از 100 درصد هم اشباع بیشتری رو اعمال میکند

7- drop-shadow : هستش box-shadow با استفاده از این ویژگی میتونیم بیایم و بخ تصویر امون سایه بدیم مقادیری که میگیره خیلی شبیه به 

8- opacity شفافیت به عنصر امون و هرچه عدد کوچک تری بدهیم عنصر  امون یک حالت شیشه ای تری می رصد

9- hue-rotate( چرخش رنگ ها به نقطه مقابلشون زیاد کاربرد ندیدم ازش ) 


Font : font-style  gont-wight  font-size   line-height  font-family
font-display : میاد و میگه که قبل از اینکه مرورگر فونت رو دانلود کنه بیا  و چه فونت رو نشون بده

@  تعاریفی که اصطلاحا با  css در داخل
میگویند patrol شروع می شوند رو اصطلاحا بهشون


@font-face {
  font-family: Vazir-Medium;
  src: url(../fonts/Vazir-Medium.eot) format("eot"),
    url(../fonts/Vazir-Medium.woff) format("woff"),
    url(../fonts/Vazir-Medium.woff2) format("woff2");
  font-weight: 700;
  font-style: normal;
}
*,body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: Vazir-Medium;
  direction: rtl;
}

clip-path : میتونیم با استفاده از پراپرتی بخشی از یک المنت رو بیایم و نشون بدیم

css  توابع 

attr : دسترسی پیدا بکنیم  HTML با استفاده از این تابع میتونیم بیایم و به مقدار اتریبیوت های 
 
a:after { content : " { " attr ( href " }" }

url : دادن آدرس به پروژه امون

local : میاد و در داخل سیستم خود کاربر یا مرورگر کاربر میگرده و اگر بود اون رو لود میکنه

ما وقتی میایم و چندین فونت رو میدیم کاربر میاد و اولین فونت  رو که ساپورت میکنه و لود میکنه و به مابقی هیچ کار دیگه ای نداره

fontwight : 500  =>  Meduim    //       fontwight : 700 => bold

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

clamp :   با استفاده از این تابع که جدید اومده میتونیم المان صفحه امون رو ریسپانسیو بکنیم

clamp : ( min , value , max ) میتونیم بیایم و برای تصاویر از اون استفاده بکنیم

<img src="apple.jpg"  alt = "Apple "> img { width : clamp ( 200px,100%,400px ) }

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

با استفاده از این تابع میتونیم بیایم یک خلاصه نویسی انجام بدیم و کد کوتاه و تمیز تری رو بنویسیم

header p : hover  , main p : hover , footer p : hover {  color : red , cursor : pointer}

: is {header , main , footer } p : hover {  color : red , cursor : pointer}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

:root{   --name : value }  ...... color : var(--name)   با استفاده از این تابع میتونیم بیایم و از متغیر هایی که تعریف کردیم استفاده بکنیم
 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

calc :  با استفاده از این تابع میتونیم بیایم و محاسبات بین پوینت های مختلف رو بهش بدیم تا کارمون رو راه بندازه

left  :  clac( 50px + 2rem )           //          width : calc( 100% - 100px)

url : برای مشخص کردن مسیر فراخوانی فایل امون هستش

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
