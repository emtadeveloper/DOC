/*
========================================================================================================================================
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

flex :هستند   flex item    داریم و هر یک از آیتم های اون یک  flex container  برای عناصر والد در راستای عرض و برای عناصر فرزند در راستای طول ما به طور کلی یک 

container

display : flex وقتی میایم و همچین مقداری رو میدهیم میاد و پروژه رو از حالت بلاکی خارج میکنه و اون رو به صورت عرضی کنار هم قرار میدهد 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

   1- flex-dirction :   row*  |  row-reverce  |   coulmn  |  coulmn-reverce  جهت چیدمان عناصر امون رو نشون میده که به صورت عمودی یا افقی هستش

   2- flex-wrap : no-wrap  | wrap-reverce

   3- flex-flow : flex-direction :coulmn  flex-wrap : wrap ترکیب دو تا بالایی

   4- justify-content : center  | flex-start*  | flex-end  |  space-between | space-around  در راستای محور عمودی هستش

   5- align-items : stretch*  |  flex-start  |  flex-end   | center  | baseline (محتوای داخل اون رو میاد و در داخل یک خط قرار میده)

   6- align-content  اگر اومدیم و با استفاده از فلکس رپ یک خط جدید به وجود آوردیم حالا این خاصیت میاد و میگه  که با اون بیا و چه عملی  رو انجام بده و فاصله بین خطوط رو
   میشه مدیریت کرد  stretch*   |  flex-start  |  flex-end   |  space-between | space-around | space-evenly کلن وقتی عناصر امون بیشتر از یک خط باشد
    
نکته : یک موقع هستش که ما یک تعداد از ایتم هامون به بعد رو میخایم که مثلا  در قسمت راست قرار بگیرند مثلا ما 5 تا آیتم داریم میخایم از 3 به بعد همه در سمت راست بیان و قرار بگیرند
رو بدهیم margin-left : auto  برای این کار کافی هستش که فقط بیایم و به آیتم سومی استایل  

نکته : ما اگر بیایم و به کانتیر امون یک ارتفاع بدهیم تمام المان هامون به همون اندازه میاد و کشیده می شود دلیل اون هم این هستش که بر اساس ستونی میاد و اعمال میکنه به طور پیش فرض

items
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1- align-selft

2- order : پیش فرض همه 0 و اگر مثبت بدیم میره جلو و منفی میره و عقب 

3- flex-grow :  مقدار پیش فرض 0
اگر بیایم و مقدار یک رو بهش بدیم میاد و فضای باقی مانده رو تمام به اون آیتم اضافه میکنه   و اگر بیایم و به همه بدیم اون فضا رو بین همه تقسیم میکنه

4- flex-shrink : مقدار پیش فرض 1
بخوره  over flow  مقدار پیش فرض یک یعنی وقتی فضا کمه با نسبت یک بیا و کم کن و میتونیم مقدار هارو بیشتر کنیم مثلا 2 یکی و 1 یکی یا 0 بدیم که کم نشه و 

5- flex-basis  row column : واحد اندازه  |  auto
هستش یعنی آیتم هایی که داریم  رو بر اساس محتوایی که دارند میاد و بزرگ میکنه content - base or auto  به صورت پیش فرض روی گزینه   width  این ویژگی خیلی شبیه به خاصیت 
و اگر بیایم و مقدار 0 رو براش بزاریم دیگه اون محتوا رو در نظر نمیگیره و اصطلاحا اون رو ایگنور میکنه ما میتونیم هم بیایم و این ویژگی یکی یکی به آیتم ها بدیم تا ایگنور کنه یا هم بیایم و به  
صورت کلی  به کانتینر  اون بیایم و بدهیم

flex-grow : 0 ;    ایتم هامون هر چه قدر فضا میخان بهشون بده و مابقی درست بیا و تقسیم کن بین همه
flex-basis : auto ;

نکته : تفاوت این پراپرتی با عرض در این هستش که وقتی محور هارو میایم و جابه جا میکنیم   با اون میچرخه اما عرض خالی این کار رو نمیکنه 
امون مثلا ردیف باشه این مقدار برای عرض در نظر گرفته میشه و اگر ستون باشه این مقدار برای طول در نظر گرفته میشه  flex-direction یعنی اگه 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 flex : flex-basis flex-grow flex-shrink

خلاصه نویسی ها 

flex : 0  auto ;   flex-grow : 0   //    flex-shrink : 1   //   flex-basis : auto

flex : 1 ;   flex-grow : 1  //     flex-shrink : 1     //     flex-basis : 0
 
flex :  auto ;     flex-grow : 1    //    flex-shrink : 1     //    flex-basis : auto

flex :  none ;   flex-grow : 0      //      flex-shrink : 0      //      flex-basis : auto

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
استفاده میکردیم حالا اگر میخاستیم که بیایم و اون ها کنار همدیگه قرارشون بدیم یکسری روش ها وجود داشت ul  li  ما وقتی قرار بود که بیایم و یک نوبار رو به وجود بیاریم میومدیم و از تگ های 

1 - display : inline  عرض و ارتفاع نمیتونستیم بدیم و از طرفیم مارجین بالا و پایین نمیگرفت و فقط مارجین از اطراف داشت همچنین اگر میومدیم و به اون ها دیگه مارجین نمیدادیم یک فاصله
رو میدادیم تا بر طرف بشه  margin-right : -6px  یا مارجینی  رو به صورت خودکار باز میگرفت که برای رفع اون باید میومدیم و یک  

2- float :  left div استفاده میکردیم که به صورت یک تگ  clearfix  از حالت فرزند بودن خارج میشوند و باعث می شوند که پرنت اشون یک ارتفاع صفر بگیره و برای رفع اون میومدیم و اصطلاحا از 
استفاده کردند  after before  که باز برای این مشکل ما عملا ساختار امون رو اومدیم و تغیر دادیم که برای حل اون هم اومدم و از .clearfix {  clear : both }  هامون میدادیم li به عنوان خواهر برادر 

3- flexBox :   رو بدیم display : flex  که فقط لازم به پرنت اشون این 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
========================================================================================================================================
*/
