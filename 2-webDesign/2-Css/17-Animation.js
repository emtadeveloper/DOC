/*
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Animation 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- transform : اون رو بنویسیم translate rotate جا به جایی عنصر که میتونیم به صورت تک خطی هم به این شیوه 

   1- translate(x,y,z)  //    translateX( )    //    translateY( )  : % px rem      //    translateZ( )  جا یه جایی عنصر برا اساس محور عناصر
 
    2-rotate(deg) در حالت عادی هم دور محور زد شروع به چرخیدن میکند    و از یکی از راس ها شروع به چرخیدن میکند 
       rotateX    ---    //   rotateY    |||      //  rotateZ    3D *
    
     3-scale(x,y,z) : number  

    رو میگیرند فقط اعمال می شوند  display : inline-block  نکته : این استایل برای بعضی از عناصر که مقدار 

     4-skew(x,y)  deg یک جور انحراف حول محور های طول و عرض  که مقدار به صورت درجه میگیره  //   skewX  skewY
    
     5-matrix(ترکیب)  //   matrix( scaleX,skewX,skewY,translateX,translateY )
        
نکته : در هنگام نوشتن پراپرتی ها به صورت ترکیبی نکته ای که باید مدنظر ما هست که میان و تغیرات رو همه بر حسب والد اعمال میکنند
نه پشت سر هم که این مقداری تغیر رو ایجاد میکند اون هم به خاطر ترتیبی بودن سی اس اس هستش

transform-origin  : برای جا به جایی عناصری که در داخل اون ها اومدیم و از ویژگی بالایی استفاده کردیم و اگر استفاده نکرده باشیم دیگه کار نمیکنه برامون
transform-origin : X  Y : % px rem     و میاد و در راستای طول و عرض اون اجرا میکنه    

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

transition  برای تغیر حالت یک عنصر یا یک افکت خاص میایم و ازش استفاده میکنیم

خلاصه نویسی transition : 1-transition-property    2-transition-duration     3-transition-timing-function         4-transition-delay

1-transition-property  حالا یا مقدار و نام پراپرتی یا هم و اگر هم خواستیم از چندتا پراپرتی استفاده کنیم با , جداشون کنیم all اون پراپرتی که میخایم و بیایم و تغیر روش اعمال کنیم 

2-transition-duration  بازه زمانی اجرای مورد نظر ما که در چند ثانیه نشون داده شود

3-transition-timing-function : مربوط به یک افکت هستش که بیاد و بگیرد و انواع  مختلفی میگیرد
linear   //      ease   //      ease-in       //        ease-out      //        ease-in-out        //         cubic-bezie(n,n,n,n)

4-transition-delay میزان تاخیر در در اعمال شدن تغیرات هستش که هم برای شروع و هم برای پایان اعمالش میکند

باشند رو میتونیم بیایم و استفاده بکنیم Animated ما از این پراپرتی فقط مواقعی میتونیم بیایم و استفاده بکنیم که پراپرتی هامون از نوع 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

@keyframes name : استایل های مربوطه رو متناسب رو بهش میدهیم

@keyframes name {    from{ }    to{ }   }

@keyframes name { 0%{ }   25%{ }   50%{ }     75%{ }  100%{ }  }

animation :   1- animation-name       2- animation-direction    3- animation-itreation-count    4- animation-delay   
                      5- animation-duration   6- animation-fill-mode     7- animation-play-state            8- animation-timing-function

          animation-itreation-count تعداد دفعات تکرار که مقدار عددی و بی نهایت میگیرد

           animation-fill-mode  برای حفط آخرین موقعیت هستش که مقادیر زیر را میگیرد    forward  backward
         
          animation-play-state اجرا و استاپ

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

اگر برای استایل دادن اومدیم به صورت درصدی عمل کردیم ولی مقدار 100 درصد رو وارد نکردیم بعد مرحله آخر به مرحله اولی اش بر میگرده
قرار بدیم  fill-mode  :  forward مگه این که مقدار 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

prespective  :  عمق بصری دادن چشم انداز و بعد دادن
زمانی که از این ویژگی استفاده میکنیم میاد و روی عنصر درونی اعمال می شود یعنی عنصر والد میگیرد و هر فرزندی که بگیرد  و هر بچه ای که درونش بود 
اون اعمال می شود روش و یک جور برای تغیر دادن چرخش ها در محور های طول عرض و ارتفاع هستش بالایی به والد می دهیم 

prespective-origin میاد و میگوید که کدوم سمت فرزند میخواهید که بیاد و عمق داشته باشد که  خیلی جالبه که مقادییر

left   right  bottom  top 
البته وابسته به مقدار بالایی اش هست یعنی اون باید باشد بالایی به والد می دهیم 

transform-style: preserve-3d; غالبا برای اینکه بیاد و حالت سه بعدی بگیرد از اون ها استفاده میکنیم یعنی محیط مارو تبدیل به سه بعدی بکند

transform-style: flat که یعنی دو بعدی که مقدار پیش فرض اش هستش به عنصری که میخایم داخلش تغیر اعمال میکنیم

5-backface-visibility : hidden visible برای حالت سه بعدی که بیاد و پشت کارد ما دیده بشه باید بیایم و استفاده بکنیم که مقدار های مخفی و نشان دادن میگیرد 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
